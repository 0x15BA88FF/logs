---
import { getCollection, getEntryBySlug } from "astro:content";

import BlogLayout from "@/layouts/BlogLayout.astro";
import { Clock, Clock5 } from "lucide-react";
import Badge from "@/components/Badge.astro";

export async function getStaticPaths() {
    const posts = await getCollection("posts");
    return posts.map(post => ({ params: { slug: post.slug } }));
}

const { slug } = Astro.params;
const post = await getEntryBySlug("posts", slug);
const { Content } = await post.render();

const formatDate = (date) => {
    const year = date.getFullYear();
    const month = String(date.getMonth() + 1).padStart(2, '0');
    const day = String(date.getDate()).padStart(2, '0');
    const hours = String(date.getHours()).padStart(2, '0');
    const minutes = String(date.getMinutes()).padStart(2, '0');

    return `${day}/${month}/${year} ${hours}:${minutes}`;
}

const formatDateCreated = formatDate(new Date(post.data.created));
const formatDateModified = formatDate(new Date(post.data.updated));
---

<BlogLayout title={`${post.data.title} | 0x15BA88FF Logs`} styleclasses={post.data.styleclasses}>
    <div>
        {post.data.banner?.image &&
            <img src={post.data.banner.image} alt={post.data.banner.alt} class="aspect-[2.9] mb-4 rounded-2xl" />
        }
        <h1 class="my-4 text-2xl md:text-4xl font-bold">{post.data.title}</h1>
        <p>{post.data.description}</p>
        <table class="my-4 w-full">
            <tbody>
                <tr>
                    <td class="py-2 flex items-center gap-2"><Clock5 size={20} /><p>Created</p></td>
                    <td><p class="text-primary-700">{formatDateCreated}</p></td>
                </tr>
                <tr>
                    <td class="py-2 flex items-center gap-2"><Clock5 size={20} /><p>Modified</p></td>
                    <td><p class="text-primary-700">{formatDateModified}</p></td>
                </tr>
            </tbody>
        </table>
        <div class="flex gap-2 flex-wrap">
            {post.data.draft && (
                <Badge tag="draft" className="text-yellow-600 dark:text-yellow-400 bg-yellow-100 dark:bg-yellow-900" />
            )}
            {post.data.tags?.map(tag => (
                <Badge tag={tag} className="text-primary-400 bg-primary-900" />)
            )}
        </div>
    </div>
    <div class="mt-8 prose">
        <Content />
    </div>
</BlogLayout>
